[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "isic"
version = "0.0.0"
requires-python = ">=3.13"
license = "Apache-2.0"
license-files = ["LICENSE"]
classifiers = ["Private :: Do Not Upload"]
dependencies = [
  # Runtime dependendencies, always needed
  "bcrypt",
  "celery",
  "deepdiff",
  "django[argon2]",
  "django-allauth",
  "django-auth-style",
  "django-cachalot",
  "django-click",
  "django-cors-headers",
  "django-environ",
  "django-extensions",
  "django-filter",
  "django-json-widget",
  "django-markdownify",
  "django-ninja",
  # v2 removed OOB support: https://github.com/jazzband/django-oauth-toolkit/pull/1124
  "django-oauth-toolkit<2.0.0",
  "django-redis",
  "django-resonant-settings[allauth,celery]",
  "django-resonant-utils[s3_storage]",
  "django-stubs-ext",
  "django-widget-tweaks",
  "gdal",
  "google-analytics-data",
  "elasticsearch",
  "hashids",
  "isic-metadata",
  "jaro-winkler",
  "numpy",
  "pandas",
  "Pillow",
  "psycopg[binary]",
  "pycountry",
  "pydantic",
  "pyexiv2",
  "pyparsing",
  "python-magic",
  "redis",
  "requests",
  "requests-toolbelt",
  "rich",
  "tenacity",
  "whitenoise[brotli]",
  "zipfile-deflate64",
  # Production-only
  "django-s3-file-field[s3]",
  "django-storages[s3]",
  "gunicorn",
  "sentry-sdk[celery,django,pure_eval]",
  "orjson>=3.10.18",
]

[project.optional-dependencies]
development = [
  # Runtime dependendencies, only needed with "development" settings
  "django-browser-reload",
  "django-debug-toolbar",
  "django-minio-storage",
  "django-resonant-utils[minio_storage]",
  "django-s3-file-field[minio]",
  "ipython",
  "watchdog",
  "werkzeug",
]

[dependency-groups]
dev = [
  # Additional developer tools
  # The "dev" dependency group is installed by default,
  # so use this to install "development" extras by default too
  "isic[development]",
  "tox",
  "tox-uv",
]
lint = [
  "djhtml",
  "ruff",
  "semgrep"
]
format = [
  "djhtml",
  "ruff",
]
type = [
  "mypy",
  "celery-types",
  "django-stubs[compatible-mypy]",
  "types-requests",
]
test = [
  "factory-boy",
  "hypothesis",
  "pytest",
  "pytest-cov",
  "pytest-django",
  "pytest-factoryboy",
  "pytest-lazy-fixtures",
  "pytest-mock",
  # Enable with "pytest --random-order ..."
  "pytest-random-order",
  # Enable with "pytest --count=... ..."
  "pytest-repeat",
]
profile = [
  "memray",
  "pyinstrument",
]

[tool.hatch.build]
packages = [
  "isic",
]

[[tool.uv.index]]
name = "large_image"
url = "https://girder.github.io/large_image_wheels/"
explicit = true

[tool.uv.sources]
gdal = { index = "large_image" }

[tool.ruff]
line-length = 100
extend-exclude = ["typings"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  # Incompatible with formatter
  # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "COM812", # missing-trailing-comma
  "COM819", # prohibited-trailing-comma
  "D206", # indent-with-spaces
  "D300", # triple-single-quotes
  "E111", # indentation-with-invalid-multiple
  "E114", # indentation-with-invalid-multiple-comment
  "E117", # over-indented
  "ISC001", # single-line-implicit-string-concatenation
  "ISC002", # multi-line-implicit-string-concatenation
  "Q", # flake8-quotes
  "W191", # tab-indentation

  "A003", # Class attribute is shadowing a Python builtin
  "ANN", # flake8-annotations
  "ARG001", # Unused function argument
  "ARG002", # Unused method argument
  "D1", # Missing docstring
  "EM101", # Exception must not use a string literal, assign to variable first
  "EM102", # Exception must not use an f-string literal, assign to variable first
  "ERA001", # Found commented-out code
  "FIX", # flake8-fixme
  "TD002", # Missing author in TODO
  "TD003", # Missing issue link on the line following this TODO
  "TRY003", # Avoid specifying long messages outside the exception class
  "RET505", # superfluous else return statement

  # Excessive
  "A005", # module shadows built-in
  "RET503", # implict return
  "RET506", # else after raise
  "PLR2004", # magic value used in comparison

  # Try to fix upstream
  "RUF012", #  Mutable class attributes should be annotated with `typing.ClassVar`

  # Try to fix in the future
  "DJ001", # null=True on char fields
  "TC002",  # use type-checking blocks
  "TRY002", # create custom exceptions
  "A002", # shadowing builtins, we do this a lot with id for endpoints
]

[tool.ruff.lint.per-file-ignores]
"isic/settings/*" = [
  "I001", # unsorted-imports
  "F403", # undefined-local-with-import-star
  "F405", # undefined-local-with-import-star-usage
]
"isic/settings/{development,testing}.py" = [
  "S105", # hardcoded-password-string
]
"scripts/**" = [
  "INP001", # File is part of an implicit namespace package
]
"**/migrations/**" = [
  "N806", # Variable in function should be lowercase
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]
"**/management/commands/**" = [
  "INP001", # File is part of an implicit namespace package
]
"**/tests/**" = [
  "DJ007", # Do not use `__all__`
  "DJ008", # Model does not define `__str__` method
  "PLR0913", # Too many arguments to function call
  "PLR2004", # Magic value used in comparison
  "S", # flake8-bandit
  "SLF001", # Private member accessed
]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.flake8-self]
extend-ignore-names = ["_base_manager", "_default_manager",  "_meta"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["ninja.Query"]

[tool.ruff.lint.isort]
# Sort by name, don't cluster "from" vs "import"
force-sort-within-sections = true

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
files = [
  "isic",
]
check_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
plugins = [
    "mypy_django_plugin.main",
]

[tool.django-stubs]
django_settings_module = "isic.settings.testing"

[tool.pytest.ini_options]
addopts = [
  # Test utilies should be imported absolutely from the pythonpath,
  # so use the Pytest-recommended "importlib" mode
  "--import-mode=importlib",
  "--strict-config",
  "--strict-markers",
  "--showlocals",
  "--verbose",
  # Specifying as "--ds" will override any value in the environment
  "--ds=isic.settings.testing",
  "--cov",
  "--cov-report=html",
]
filterwarnings = [
  "error",
  # pytest often causes unclosed socket warnings
  "ignore:unclosed <socket\\.socket:ResourceWarning",
  # https://github.com/vitalik/django-ninja/issues/1245
  "ignore:Support for class-based `config` is deprecated:pydantic.warnings.PydanticDeprecatedSince20",
  "ignore:csrf argument is deprecated:DeprecationWarning:isic.urls",
  "ignore:[\\w]+Factory\\._after_postgeneration will stop saving the instance:DeprecationWarning:factory.django",
  # In test_publish_copies_default_attribution
  "ignore:Unclosed file <tempfile\\.SpooledTemporaryFile:ResourceWarning",
  # https://github.com/jazzband/django-widget-tweaks/pull/157
  # Fixed with v1.5.1, but requires Django 5.2
  "ignore:'maxsplit' is passed as positional argument:DeprecationWarning:widget_tweaks.templatetags.widget_tweaks",
]

[tool.coverage.run]
source_pkgs = [
  "isic",
]
branch = true
