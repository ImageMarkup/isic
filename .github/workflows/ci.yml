name: ci
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      elasticsearch:
        image: elasticsearch:7.14.0
        env:
          ES_JAVA_OPTS: "-Xms250m -Xmx750m"
          discovery.type: single-node
          xpack.security.enabled: "true"
          ELASTIC_PASSWORD: elastic
        ports:
          - 9200:9200
      rabbitmq:
        image: rabbitmq:management
        ports:
          - 5672:5672
      minio:
        # This image does not require any command arguments (which GitHub Actions don't support)
        image: bitnami/minio:2022.3.3
        env:
          MINIO_ROOT_USER: minioAccessKey
          MINIO_ROOT_PASSWORD: minioSecretKey
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Run tests
        run: |
          tox
        env:
          DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
          DJANGO_ISIC_ELASTICSEARCH_URI: http://elastic:elastic@localhost:9200
          DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
          DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
  build-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "lts/*"
      - name: Install packages
        run: |
          yarn install --frozen-lockfile
      - name: Run build
        run: |
          yarn run build
