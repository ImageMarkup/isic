from uuid import uuid4

from django.conf import settings
from django.db import transaction
from django.db.models.expressions import F
import djclick as click

from isic.ingest.models.accession import Accession


@click.command()
def migrate_blob_names():
    with transaction.atomic():
        for accession in Accession.objects.filter(
            original_blob_name=F('blob_name'),
        ).iterator():
            autogenerated_blob_base_name = f'{uuid4()}.jpg'
            autogenerated_blob_name = f'{uuid4()}/{autogenerated_blob_base_name}'
            # copy object without going through typical django File stuff, to avoid downloading
            # and reuploading entire s3 bucket.
            click.echo(f'copying {accession.blob.name} -> {autogenerated_blob_name}')
            accession.blob.storage.bucket.copy(
                {
                    'Bucket': settings.AWS_STORAGE_BUCKET_NAME,
                    'Key': accession.blob.name,
                },
                autogenerated_blob_name,
            )
            accession.blob.name = autogenerated_blob_name
            accession.blob_name = autogenerated_blob_base_name
            accession.save(update_fields=['blob', 'blob_name'])
