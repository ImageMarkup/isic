# Generated by Django 4.2.13 on 2024-06-25 19:44

from django.conf import settings
import django.contrib.postgres.indexes
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.functions.text


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("ingest", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="image",
            name="accession",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.PROTECT, to="ingest.accession"
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="published_images",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="isic",
            field=models.OneToOneField(
                editable=False,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.isicid",
                verbose_name="isic id",
            ),
        ),
        migrations.AddField(
            model_name="image",
            name="shares",
            field=models.ManyToManyField(through="core.ImageShare", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="girderimage",
            name="accession",
            field=models.OneToOneField(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="ingest.accession",
            ),
        ),
        migrations.AddField(
            model_name="girderimage",
            name="dataset",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="images",
                to="core.girderdataset",
            ),
        ),
        migrations.AddField(
            model_name="girderimage",
            name="isic",
            field=models.OneToOneField(
                editable=False,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.isicid",
            ),
        ),
        migrations.AddField(
            model_name="doi",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.RESTRICT,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="collectionshare",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.collection"
            ),
        ),
        migrations.AddField(
            model_name="collectionshare",
            name="grantee",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="collection_shares_received",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="collectionshare",
            name="grantor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="collection_shares_given",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="creator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="doi",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="core.doi",
            ),
        ),
        migrations.AddField(
            model_name="collection",
            name="images",
            field=models.ManyToManyField(related_name="collections", to="core.image"),
        ),
        migrations.AddField(
            model_name="collection",
            name="shares",
            field=models.ManyToManyField(
                related_name="collection_shares",
                through="core.CollectionShare",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddConstraint(
            model_name="segmentation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("mask", ""), _negated=True),
                fields=("mask",),
                name="segmentation_unique_mask",
            ),
        ),
        migrations.AddConstraint(
            model_name="imageshare",
            constraint=models.CheckConstraint(
                condition=models.Q(("grantor", models.F("grantee")), _negated=True),
                name="imageshare_grantor_grantee_diff_check",
            ),
        ),
        migrations.AddConstraint(
            model_name="imageshare",
            constraint=models.UniqueConstraint(
                fields=("grantor", "image", "grantee"),
                name="imageshare_grantor_image_grantee_unique",
            ),
        ),
        migrations.AddIndex(
            model_name="image",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("isic"), name="gin_trgm_ops"
                ),
                name="isic_name_gin",
            ),
        ),
        migrations.AddConstraint(
            model_name="girderimage",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("status", "unknown"),
                    ("status", "non_image"),
                    ("accession__isnull", False),
                    _connector="OR",
                ),
                name="non_unknown_have_accession",
            ),
        ),
        migrations.AddConstraint(
            model_name="girderimage",
            constraint=models.CheckConstraint(
                condition=models.Q(
                    ("status", "non_image"),
                    models.Q(("stripped_blob_dm", ""), _negated=True),
                    _connector="OR",
                ),
                name="non_non_image_have_stripped_blob_dm",
            ),
        ),
        migrations.AddConstraint(
            model_name="collectionshare",
            constraint=models.CheckConstraint(
                condition=models.Q(("grantor", models.F("grantee")), _negated=True),
                name="collectionshare_grantor_grantee_diff_check",
            ),
        ),
        migrations.AddConstraint(
            model_name="collectionshare",
            constraint=models.UniqueConstraint(
                fields=("grantor", "collection", "grantee"),
                name="collectionshare_grantor_collection_grantee_unique",
            ),
        ),
        migrations.AddIndex(
            model_name="collection",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("name"), name="gin_trgm_ops"
                ),
                name="collection_name_gin",
            ),
        ),
        migrations.AddConstraint(
            model_name="collection",
            constraint=models.UniqueConstraint(
                condition=models.Q(("pinned", True)),
                fields=("name",),
                name="collection_pinned_has_unique_name",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="collection",
            unique_together={("creator", "name")},
        ),
    ]
