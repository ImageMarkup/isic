services:
  postgres:
    image: pgvector/pgvector:pg17
    shm_size: 128mb
    environment:
      POSTGRES_DB: django
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "postgres"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  elasticsearch:
    image: elasticsearch:9.0.2
    environment:
      ES_JAVA_OPTS: "-Xms250m -Xmx750m"
      discovery.type: single-node
      xpack.security.enabled: "true"
      ELASTIC_PASSWORD: elastic
      cluster.routing.allocation.disk.threshold_enabled: "false"
    healthcheck:
      test: ["CMD", "curl", "--fail", "--user", "elastic:elastic", "http://localhost:9200/"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 9200:9200
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:management-alpine
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  minio:
    image: minio/minio:latest
    # When run with a TTY, minio prints credentials on startup
    tty: true
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minioAccessKey
      MINIO_ROOT_PASSWORD: minioSecretKey
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      # "mc ready" doesn't terminate on failure, so time it out
      timeout: 1s
      start_period: 30s
      start_interval: 2s
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio:/data

  redis:
    image: redis:alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 30s
      start_interval: 2s
    ports:
      - 6379:6379
    volumes:
      - redis:/data

volumes:
  postgres:
  elasticsearch:
  minio:
  rabbitmq:
  redis:
